/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/plant1.glb --transform --types --shadows --keepmeshes 
Files: public/models/plant1.glb [2.91MB] > C:\Users\tibog\Documents\VSCODE\r3f-3rd-person-controller-final-main2\plant1-transformed.glb [482.31KB] (83%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Plant_Areca_C_spring-summer-autumn_1']: THREE.Mesh
    ['Plant_Areca_C_spring-summer-autumn_2']: THREE.Mesh
  }
  materials: {
    Leaf_Areca_bqm: THREE.MeshStandardMaterial
    Stem_bqm: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/plant1-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes['Plant_Areca_C_spring-summer-autumn_1'].geometry} material={materials.Leaf_Areca_bqm} />
      <mesh castShadow receiveShadow geometry={nodes['Plant_Areca_C_spring-summer-autumn_2'].geometry} material={materials.Stem_bqm} />
    </group>
  )
}

useGLTF.preload('/plant1-transformed.glb')
